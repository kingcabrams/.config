{
    "f0r": {
        "prefix": "f0r",
        "body": [
            "for (int ${1} = 0; ${1} < ${2}; ++${1}) "
        ]
    },
    "for": {
        "prefix": "for",
        "body": [
            "for (int ${1} = ${2}; ${1} < ${3}; ++${1}) "
        ]
    },
    "r0f": {
        "prefix": "r0f",
        "body": [
            "for (int ${1} = ${2}-1; ~${1}; --${1}) "
        ]
    },
    "rof": {
        "prefix": "rof",
        "body": [
            "for (int ${1} = ${2}-1; ${1} >= ${3}; --${1}) "
        ]
    },
    "each": {
        "prefix": "each",
        "body": [
            "for (auto& ${1} : ${2}) "
        ]
    },
    "sort": {
        "prefix": "sort",
        "body": [
            "sort(${1}.begin(), ${1}.end())"
        ]
    },
    "rsort": {
        "prefix": "rsort",
        "body": [
            "sort(${1}.rbegin(), ${1}.rend())"
        ]
    },

    "all": {
        "prefix": "all",
        "body": [
            "${1}.begin(), ${1}.end()"
        ]
    },
    "rall": {
        "prefix": "rall",
        "body": [
            "${1}.rbegin(), ${1}.rend()"
        ]
    },
    "size": {
        "prefix": "sz",
        "body": [
            "(int) ${1}.size()"
        ]
    },
    "vector<int>": {
        "prefix": "vi",
        "body": [
            "vector<int> "
        ]
    },
    "vector<vector<int>>": {
        "prefix": "vvi",
        "body": [
            "vector<vector<int>> "
        ]
    },
    "vector<pair<int,int>>": {
        "prefix": "vpi",
        "body": [
            "vector<pair<int,int>> "
        ]
    },
    "push_back": {
        "prefix": "pb",
        "body": [
            "push_back(${1})"
        ]
    },
    "emplace_back": {
        "prefix": "eb",
        "body": [
            "emplace_back(${1})"
        ]
    },
    "newline": {
        "prefix": "nl",
        "body": [
            "\"\\n\""
        ]
    },
    "print vector": {
        "prefix": "pv",
        "body": [
            "for (int i = 0; i < ${2}; ++i) {",
            "   cout << ${3}[i] << \" \\n\"[i==n-1]",
            "}"
        ]
    }
}
